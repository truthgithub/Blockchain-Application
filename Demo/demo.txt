基于区块链、智能合约和物联网的 供应链原型系统。为利用区块链、智能合约和物联网等新技术的优势，提高供应链信息化水平，设计开发了基于区块链、智能合约和物联网 的供应链原型系统。借助物联网中的二维码、RFID和NFC实现供应链各主体数据的自动化上传；利用区块链和智能合约，完整 保存了整个供应链各主体的数据，保证了数据公开透明、可追溯且不可篡改，同时兼顾了隐私数据的加密保护；并针对不同用户 提供了不同程度的数据查询功能。通过这些优化和改进，使供应链系统更加自动化、更加安全可信，便于监管溯源。 关键词 区块链；智能合约；物联网 近年来，商贸物流中“互联网+”的应用越来越多，利用互 联网技术不断提升着经济创新力和生产力。2017年2月，中 国商务部等5部门联合发布《商贸物流发展“十三五”规划》， 明确提出“加强商贸物流信息化建设，深入实施‘互联网+’高 效物流行动，……推广应用物联网、云计算、大数据、人工智 能、机器人、无线射频识别等先进技术，促进从上游供应商到 下游销售商的全流程信息共享，提高供应链精益化管理水 平。”供应链[1-2] 是将供应商、制造商、运输商、零售商以及消费 者连成一个整体的网链结构。当前越来越多的企业建设供 应链系统，实现供应链信息化，以满足供应链中各实体的业 务需求，使操作流程和信息系统紧密配合，实现参与主体信 息共享；实现各环节流程的无缝链接，促使各实体通过供应 链组成一个利益共同体，有了加强责任追究和监管的动力； 提高整体的自动化生产效率、提升利润、降低成本。但是当 前供应链系统存在如下不足：1）缺乏信任：供应链各个参与 主体的各环节的信息分散保存在各主体自身内部，各个主体 之间信息不够透明、信息传递速度较慢、易被人为修改，造成 各个主体彼此之间缺乏信任；2）监管追溯困难：由于各个主 体间未建立信任体系，一旦出现纠纷或质量问题，查找问题 原因时效率较低、时间较长，追溯易被中断，举证追责困难， 难以监管溯源；3）数据透明和隐私保护难以平衡：一方面，根 据法律规定，企业的部分数据需要提供给主管部门，并且向 公众和其他主体证明已经提交；另一方面，因为涉及到商业 机密，企业又担心数据对外泄露，使得企业在数据透明和隐 私保护两者之间难以平衡；4）自动化程度低：供应链的部分 环节需要人工录入数据，没有实现完全自动化，成本较高、效 率较低且易出错。 针对上述问题，本研究组设计开发了基于区块链、智能 合约和物联网的供应链原型系统。系统应用区块链技术以 及智能合约技术，将供应商、制造商、运输商、零售商等供应 链各主体从原材料供应、产品制造加工、物流运输及最终销 售的所有数据，均完整的记录保存，记录的数据公开透明、可 追溯且不可更改，并加密了其中的隐私数据，解决了供应链 主体之间的信任问题、监管溯源问题和数据隐私保护问题。 同时系统采用的二维码[3-4] 、无线射频识别RFID[5-6] 和近距离 无线通信技术NFC等物联网技术[7-11] 实现了信息录入的自动 化，减少了人工失误，解决了自动化问题。 1 系统架构 本系统包括物联网模块、智能合约模块、区块链模块、证 书中心模块和供应链模块。1）物联网模块负责读取产品的 二维码、RFID或NFC，获取产品信息，之后将产品信息、供应 链系统各主体的相关数据，包括公开数据和使用证书中心提 供的公钥加密后的隐私数据，一起通过智能合约模块将数据 上传到区块链模块，作为整个供应链系统的数据来源；2）智 能合约[12-15] 模块负责提供交互接口，包括合约生成和合约执 62 科技导报2017，35（23） 行两个子模块：合约生成子模块负责将各主体共同制定的智 能合约代码提交存储到区块链模块中；当有上传、查询等操 作时，合约执行子模块负责运行智能合约代码；3）区块 链[16-20] 模块是整个系统的核心技术部分，实现两部分功能，一 是将智能合约模块生成的智能合约代码存储到区块链中，作 为智能合约模块调用的基础；二是根据智能合约模块的调用 程序，存储和查询区块链模块中的数据[21] ；4）证书中心[22-23] 模 块负责生成公钥、私钥和版本号，提供给物联网模块和供应 链模块使用；5）供应链模块分为面向主管部门的监管子模块 和面向各主体和消费者的公共查询子模块，模块通过调用智 能合约模块的合约程序，从区块链模块中查询数据，返回查 询结果，其中隐私数据使用证书中心提供的私钥进行解密后 查看。架构如图1所示。 图1 系统整体架构 Fig. 1 Overall system architecture 2 物联网模块 物联网模块实现的功能是：供应商、制造商、运输商、零 售商等供应链系统的各主体，根据自己的特性，选择二维码、 RFID、NFC中的一种扫描设备扫描产品后，系统将自动获取 产品的信息，获取的产品信息包括产品名称、产品型号等；之 后将产品信息与供应链各主体提交的相关数据，包括各主体 的公司名称、公司地址、原材料来源、制造加工时间、制造加 工地点、运输起始时间、到达时间、销售地点、上架时间等公 开数据，及通过证书中心模块的公钥加密后的各主体公司法 人、产品内部型号、内部生产数据、完税证明等隐私数据，通 过智能合约模块提供的接口，上传保存到区块链模块中，作 为整个供应链系统的数据源。 物联网模块支持二维码、RFID、NFC等多种信息传感设 备，二维码成本低廉，适用于低价产品；RFID成本适中，适用 范围广，适用于中间价位的产品；NFC更加安全可靠，适用于 核心和高价的产品。系统可以根据产品类型的不同，采用不 同的信息读取方式。 2.1 二维码 二维码是使用特定的黑白相间的图形记录数据信息的 一种编码方式。当扫描二维码后，系统将扫描得到的图像 流，利用 Zxing 开源库来进行解析，从而得到产品的信息。 Zxing库专门用来解析二维码，识别率高，识别速度快。伪代 码为： PlanarYUVLuminanceSource source = new PlanarYUVLu⁃ minanceSource( data, width, height, dstLeft, dstTop, dstWidth, dstHeight); //封装图像data BinaryBitmap bB=new BinaryBitmap(new HybridBinarizer (source)); //转换为bitmap格式 MultiFormatReader reader = new MultiFormatReader(); String productInfo = reader.decode(bB).getText(); //解析图 像得到产品信息 2.2 RFID 无线射频识别（RFID：Radio Frequency Identification）是 一种非接触式的自动识别技术，扫描设备通过射频信号识别 嵌入产品中的RFID 芯片，从而获取信息。针对不同的扫描 设备，读取 RFID 的方法有所差异，本系统主要是针对使用 Phidgets公司的RFID扫描设备，利用RFIDTagListener()和on⁃ Tag()等函数读取产品信息。 2.3 NFC 近距离无线通信技术（NFC：Near Field Communication） 是一种短距高频的无线电技术，能在短距离内进行非接触式 的识别和数据交换。NFC有多种数据格式，本系统主要是针 对常见的NDEF格式[24] ，伪代码为： 63 科技导报2017，35（23） Parcelable[] par= getIntent().getParcelableArrayExtra(NfcAdapter.EXTRA _NDEF_MESSAGES); NdefMessage ndefM=(NdefMessage)par[0]; //转换为 NDEF 格式 NdefRecord ndefR=ndefM.getRecords()[0]; String productInfo=new String(ndefR.getPayload(),"UTF8"); //读取产品信息 同时，NFC 支持数据的双向交互，扫描者、扫描时间、地 点等扫描信息均会被记录到NFC芯片中，确保每次扫描都有 据可查。 3 区块链模块 区块链（Blockchain）是一个由多方参与共同维护的持续 增长的分布式数据库，核心在于通过分布式网络、时序不可 篡改的密码学及分布式共识机制等技术建立起了彼此之间 的信任关系，实现了在不可信网络中进行信息传递交换的可 信机制[25-26] 。在事务处理方面，与传统数据库采用ACID原则 不同，区块链采用的是最终一致性原则，从而确保所有的节 点数据在经过一段时间的同步后，最终能够达到一致的状 态。区块链具有的去中心化、共同维护、数据透明、不可篡改 等特性，使其更适用于供应链这种有多个参与主体，且需要 建立公开、透明、彼此信任机制的环境。 本系统中的区块链模块是整个系统的核心部分，模块应 用区块链技术，实现存储智能合约代码、根据智能合约程序 存储数据和查询数据的功能。 3.1 区块链模块的数据结构 区块链是以区块为单位的链状数据块结构，每隔固定的 时间就会生成新的区块，区块链中的每一个区块记录了在创 建时间内产生的所有数据。应用这一特性，本模块将供应链 系统的智能代码和各个主体的数据，永久的存储在区块链 中。区块链模块单个区块数据结构如图2所示。 图2 区块链模块单个区块数据结构 Fig. 2 Single block data structure of blockchain module 从图2可见，区块链包括区块头和区块体。区块链使用 区块头的哈希值作为区块的唯一标识，存储在下一个区块的 区块头“上一区块头的哈希值”字段中，通过记录区块头的哈 希值，形成了一条从最新区块追溯到第一个区块的数据链 条，保证了供应链系统可以追溯查找各个主体在每一个时间 阶段的数据；此外，区块体的“数据的哈希值”字段记录了在 此区块的时间阶段内各主体的每条数据的哈希值，保证了供 应链系统中各主体的每条数据都可以追溯；通过区块链的这 两个部分，使供应链系统的数据可追溯，便于追责和监管； 区块头中的“Merkle树的根节点哈希值”字段，是将区块 体中的数据反复迭代计算哈希值，并将最终的哈希值记录到 区块头中。区块头的“上一区块头的哈希值”和“Merkle树的 根节点哈希值”字段，均利用了哈希算法的单向性和抗冲突 性，确保了每一条数据都不可篡改，一旦有篡改还可以迅速 定位，提高了供应链系统数据的可靠性和可信度。 3.2 区块链模块的存储业务流程 区块链模块的存储业务过程是将各主体新产生的数据 存入新生成的区块中，并保证各主体作为节点的自有服务器 上的数据一致。具体流程是：1）供应链系统利用共识机制在 区块链的各节点中选出授权节点；2）各主体的节点产生的新 64 科技导报2017，35（23） 数据，通过点对点传输到授权节点上；3）授权节点利用共识 机制定时生成新区块；4）授权节点将新数据利用签名算法、 哈希算法等进行处理，并加上“上一区块哈希值”、“时间戳”、 “难度值”等字段内容，一起填充到新区块中；5）授权节点利 用点对点传输机制将新区块向全网传输；6）各节点接收到新 区块后，利用签名算法、哈希算法等进行验证，验证通过后， 将新区块加入到已有区块链的链尾。 区块链模块的存储业务流程利用了共识机制、点对点传 输、签名算法、哈希算法等技术，保证了数据的一致性、防篡 改性、安全性，保证了各节点的数据对其他节点均是公开透 明的，增强了供应链系统各主体之间的信任。区块链模块的 存储业务流程如图3所示。 图3 区块链模块存储业务流程 Fig. 3 Blockchain module storage business process 区块链模块的查询业务流程比较简单，各主体发送查询 请求，即可利用区块链中记录的数据的哈希值查询得到结 果。 4 智能合约模块 智能合约模块负责提供交互接口，分为合约生成和合约 执行两个子模块，合约生成子模块负责将智能合约代码提交 到区块链模块中进行存储；合约执行子模块负责运行智能合 约代码，实现从区块链模块中存储或查询数据的功能。 4.1 技术原理 智能合约是一种用计算机语言取代法律语言去记录条 款的合约，可视作一段部署在区块链上可自动运行的程序， 其涵盖的范围包括编程语言、编译器、虚拟机、事件、状态机、 容错机制等。 本系统中的智能合约模块，应用基于区块链技术的智能 合约，合约代码、执行过程、执行结果对供应链各主体均公开 透明，且结果不可篡改，提升了系统的可信度，有利于监管和 溯源管理。 当前主流的智能合约平台是以太坊（Ethereum）[27] 和超记 账本（hyperledger fabric），两者对比，以太坊更加的便于部署 和二次开发，因此本系统采用了以太坊。以太坊是当前被广 泛采用的基于区块链的开源智能合约应用平台；系统采用了 专门用于以太坊的 Solidity 语言，Solidity 语言可以实现供应 链、记账、购物等各种类型的智能合约；以太坊提供了JsonRPC、JavaScript、geth等多种接口供外部程序调用，本系统采 用了Json-RPC接口。 以太坊对上述区块链模块的数据结构做了优化修改，增 加了1个Merkle Patricia类型的状态树（state root），在此状态 树中最重要的是增加了“合约代码的哈希值”（CODEHASH） 字段，用以存储合约代码地址，本系统的物联网模块和供应 链模块根据此地址来调用合约程序。 4.2 合约生成子模块 合约生成子模块负责将智能合约代码存储到区块链模 块中。智能合约代码由供应链系统的各主体共同制定，格式 分为结构体和函数两部分，结构体记录了产品信息和供应链 系统各主体的相关数据，包括公开数据和隐私数据；函数提 供了对外操作的接口代码，比如存储、查询接口。本系统智 能合约的Solidity伪代码为： contract SupplyChain { //结构体部分 struct Product { //定义数据结构，保存产品信息和供 应链系统各主体的相关数据 uint versionId; //版本号 uint productId; //产品id 65 科技导报2017，35（23） string supplier;//定义供应商 string supplierSource;//原材料来源 …. //供应商需要提交的相关数据 string supplierEncrypted;//供应商的加密信息 string logistics1;//定义将原材料从供应商运送到制 造商的运输商 …. //运输商需要提交的相关数据 string logistics1Encrypted;//运输商的加密信息 string producer;//定义制造商 …. //制造商需要提交的相关数据 string producerEncrypted;//制造商的加密信息 string logistics2;//定义将产品从制造商运送到零售 商的运输商 …. //运输商需要提交的相关数据 string logistics2Encrypted;//运输商的加密信息 string dealer;//定义零售商 …. //零售商需要提交的相关数据 string dealerEncrypted;//零售商的加密信息 } Product[] products;//通过数组存储以上数据 //函数部分 //存储数据，同时进行初始化 function setSupplier(uint versionId,uint productId, string supplier,…,string supplierEncrypted) { products[productId].versionId = versionId; products[productId].productId = productId; …… products[productId].supplierEncrypted = supplierEn⁃ crypted; } function setLogistics1(){…} //存储将原材料从供应商运 送到制造商的运输商数据 function setProducer(){…} //存储制造商数据 function setLogistics2(){…} //存储将产品从制造商运送 到零售商的运输商数据 function setDealer(){…} //存储零售商的数据 //查询供应链系统中的公开数据 function queryPublicSupplyChain(uint productId) returns (string) { return assemblePublicInfo(products[productId]); } //查询供应链系统中的所有数据，既有公开数据，也有隐私 数据 function queryAllSupplyChain(uint productId) returns (string){ return assembleAllInfo(products[productId]); } } 合约代码制定后，本模块负责通过系统的授权节点将智 能合约代码部署到区块链模块上，存储在“合约代码哈希值” （CODEHASH）字段上。 4.3 合约执行子模块 合约执行子模块的业务流程是：某个节点的供应链模块 或物联网模块通过以太坊的Json-RPC接口来执行合约生成 子模块中生成的智能合约；同时，其他各个节点也会执行此 智能合约，各节点执行智能合约是相互独立的；当各节点执 行完毕后，将彼此验证结果是否一致；验证通过后，系统会将 执行的结果返回给供应链模块或者物联网模块，也会将此结 果存入到各节点的区块链中（图4）。 5 证书中心模块 证书中心模块负责生成公钥和私钥，分别提供给物联网 模块和供应链模块。为提高系统的安全性，公钥和私钥将定 时更新，每次更新时会生成新的密钥版本号，密钥版本号也 将同时提供给物联网模块和供应链模块。生成公钥和私钥 的伪代码为： KeyPairGenerator keyPairGen = KeyPairGenerator.ge⁃ tInstance("RSA"); //初始化RSA库 keyPairGen.initialize(2048); //密钥长度为2048位 KeyPair keyPair = keyPairGen.generateKeyPair(); // 生成公私钥对 RSAPublicKey publicKey = (RSAPublicKey) keyPair. getPublic(); //取得公钥 RSAPrivateKey privateKey = (RSAPrivateKey) keyPair.getPrivate(); //取得私钥 隐私数据的加解密流程是：证书中心生成公钥、私钥和 密钥版本号后，将公钥和密钥版本号推送到物联网模块，同 时将私钥和密钥版本号以离线方式发送给供应链模块中的 图4 合约执行子模块业务流程 Fig. 4 Contract execution sub module business process 66 科技导报2017，35（23） 监管子模块；物联网模块使用公钥将隐私数据加密，加密后 将隐私数据和密钥版本号通过智能合约模块上传；主管部门 可以通过供应链模块的监管子模块，使用密钥版本号对应的 私钥进行解密，查看隐私数据。流程如图5所示。 6 供应链模块 供应链模块分为面向主管部门的监管子模块、面向各主 体和消费者的公共查询子模块等两个子模块。模块通过调 用智能合约模块，从区块链模块中查询数据，提供给主管部 门、供应商、制造商、运输商、零售商及消费者。 6.1 面向主管部门的监管子模块 面向主管部门的监管子模块通过调用智能合约模块中 的 queryAllSupplyChain()接口得到公开数据和加密的隐私数 据，使用私钥对隐私数据进行解密，使主管部门既能得到供 应链系统的公开数据，也能得到各主体的隐私数据，提升了 监管力度，实现了数据透明和隐私保护之间的平衡。伪代码 为： byte[] key = getPrivKey(versionId); //根据密钥版本号获取 私钥字符串 String all = SmartContactUtil.queryAllSupplyChain(produc⁃ tId);//通过智能合约模块的接口查询所有数据 String pub = DataUtil.getPubData(all);//得到公开数据 String privEncrypted = DataUtil.getPrivData(all); //得到加 密的隐私数据 KeyFactory factory = KeyFactory.getInstance("RSA"); //初 始化RSA类库 PrivateKey privateKey = factory.generatePrivate( new PKCS8EncodedKeySpec(key.getByte())); // 将私钥字符串转换为私钥类 Cipher cipher = Cipher.getInstance(factory.getAlgorithm()); //初始化加解密类 cipher.init(Cipher.DECRYPT_MODE, privateKey); //设 定 为解密方式，并传入私钥类 String priv=cipher.doFinal(privEncrypted.getBytes()); //执 行解密，得到了隐私数据 6.2 面向各主体和消费者的公共查询子模块 供应链系统的各主体和消费者使用公共查询子模块，通 过调用智能合约模块中的queryPublicSupplyChain()接口查询 公开的数据，比如供应商数据、运输商数据、制造商数据等。 由于本系统利用了区块链的特性，各节点的数据完全相同且 无法篡改，因此查询结果可信可靠，可用于溯源和举证追责； 系统利用了区块链的多节点部署机制，因此不存在单节点故 障问题，能满足大量用户的查询请求。此外，即使有用户想 要查看其他主体的隐私数据，由于缺少私钥也无法解密，保 证了隐私数据的安全性。 7 结论 设计开发了基于区块链、智能合约和物联网的供应链原 型系统。此系统已经在测试平台运行，由9台服务器组成，其 中3台搭建了物联网模块，分别对应二维码子模块、RFID子 模块和NFC子模块；3台搭建了以太坊模块和区块链模块；1 台搭建了证书中心模块；2台搭建了供应链模块，分别用于监 管子模块和公共查询子模块；服务器的cpu分别为16核到32 核的志强处理器，内存为16 G到32 G，操作系统为CentOS7； 软件包括go-ethereum1.6.7、Solidity0.4.15。测试运行期间，系 统通过扫描二维码、RFID和NFC得到产品信息，系统各主体 提交相关数据，包括公司名称、公司地址等公开数据和随机 生成的隐私数据；在对隐私数据利用公钥进行加密后，将公 开数据和隐私数据一起通过智能合约模块存入区块链模块 中；供应链模块的公共查询子模块调用智能合约模块，可以 快速查询到公开数据，查询得到的数据与扫描后得到数据完 全一致；供应链模块的监管子模块利用私钥可以解密隐私数 据，查询得到的隐私数据与提交给系统的完全一致。通过此 原型系统，实现了整个供应链数据的上传、存储、查询、加解 密等功能，数据公开透明、可追溯且不可更改，解决了各主体 之间的信任问题、监管溯源问题、数据隐私保护问题和自动 化问题。本系统下一步将结合具体的生产环境，继续完善， 比如公共查询时提供多种查询方式，如微信查询和 APP 查 询。